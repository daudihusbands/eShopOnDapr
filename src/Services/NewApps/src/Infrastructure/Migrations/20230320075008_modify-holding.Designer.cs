// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewApps.Infrastructure.Persistence;

#nullable disable

namespace NewApps.Infrastructure.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20230320075008_modify-holding")]
    partial class modifyholding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.FinancialActivity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommissionAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinActivityGrossAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinActivityNetAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinActivityTypeId");

                    b.HasIndex("PolicyId");

                    b.ToTable("FinancialActivity");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Holding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountDesignationId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierAdminSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyTypeCodeId")
                        .HasColumnType("int");

                    b.Property<string>("DistributorClientAcctNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HoldingStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("HoldingTypeCodeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountDesignationId");

                    b.HasIndex("CurrencyTypeCodeId");

                    b.HasIndex("HoldingStatusId");

                    b.HasIndex("HoldingTypeCodeId");

                    b.HasIndex("PolicyId");

                    b.ToTable("Holdings");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.OLifEExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnnuityWithdrawalChargePeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDSCPeriodElection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangePolicies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommissionOption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfDeath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistributorTransactionIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdeliveryDeliverTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdeliveryOptIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExistingPolicies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtensionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OptionBBenefitPct")
                        .HasColumnType("float");

                    b.Property<double?>("OptionEBenefitPct")
                        .HasColumnType("float");

                    b.Property<double?>("OptionFBenefitPct")
                        .HasColumnType("float");

                    b.Property<double?>("OptionHBenefitPct")
                        .HasColumnType("float");

                    b.Property<double?>("OptionIBenefitPct")
                        .HasColumnType("float");

                    b.Property<double?>("OptionJBenefitPct")
                        .HasColumnType("float");

                    b.Property<double?>("OptionLBenefitPct")
                        .HasColumnType("float");

                    b.Property<string>("OwnerFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PolicyChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("PremiumControlNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorYearAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verification_Of_Identity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialActivityId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PolicyId");

                    b.ToTable("OLifEExtension");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FinancialActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaymentAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentFormId")
                        .HasColumnType("int");

                    b.Property<string>("SourceOfFundsDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceOfFundsTCId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialActivityId");

                    b.HasIndex("PaymentFormId");

                    b.HasIndex("SourceOfFundsTCId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnnualPaymentAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierPartyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CusipNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitDepositAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JurisdictionId")
                        .HasColumnType("int");

                    b.Property<int?>("LineOfBusinessId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentAmt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATE_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TRANSACTION_IDS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JurisdictionId");

                    b.HasIndex("LineOfBusinessId");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.WithTC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WithTC");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WithTC");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.AccountDesignationTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("AccountDesignationTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.CurrencyTypeCodeTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("CurrencyTypeCodeTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.FinActivityTypeTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("FinActivityTypeTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.HoldingStatusTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("HoldingStatusTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.HoldingTypeTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("HoldingTypeTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.JurisdictionTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("JurisdictionTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.LineOfBusinessTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("LineOfBusinessTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.PaymentFormTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("PaymentFormTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.QualPlanSubTypeTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("QualPlanSubTypeTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.QualPlanTypeTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("QualPlanTypeTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.SourceOfFundsTC", b =>
                {
                    b.HasBaseType("NewApps.Domain.Entities.ACORD.WithTC");

                    b.HasDiscriminator().HasValue("SourceOfFundsTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.FinancialActivity", b =>
                {
                    b.HasOne("NewApps.Domain.Entities.ACORD.FinActivityTypeTC", "FinActivityType")
                        .WithMany()
                        .HasForeignKey("FinActivityTypeId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.Policy", null)
                        .WithMany("FinancialActivities")
                        .HasForeignKey("PolicyId");

                    b.Navigation("FinActivityType");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Holding", b =>
                {
                    b.HasOne("NewApps.Domain.Entities.ACORD.AccountDesignationTC", "AccountDesignation")
                        .WithMany()
                        .HasForeignKey("AccountDesignationId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.CurrencyTypeCodeTC", "CurrencyTypeCode")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeCodeId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.HoldingStatusTC", "HoldingStatus")
                        .WithMany()
                        .HasForeignKey("HoldingStatusId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.HoldingTypeTC", "HoldingTypeCode")
                        .WithMany()
                        .HasForeignKey("HoldingTypeCodeId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId");

                    b.Navigation("AccountDesignation");

                    b.Navigation("CurrencyTypeCode");

                    b.Navigation("HoldingStatus");

                    b.Navigation("HoldingTypeCode");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.OLifEExtension", b =>
                {
                    b.HasOne("NewApps.Domain.Entities.ACORD.FinancialActivity", null)
                        .WithMany("OLifEExtensions")
                        .HasForeignKey("FinancialActivityId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.Payment", null)
                        .WithMany("OLifEExtensions")
                        .HasForeignKey("PaymentId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.Policy", null)
                        .WithMany("OLifEExtensions")
                        .HasForeignKey("PolicyId");

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.DeathBenefitPaymentOptions", "DeathBenefitPaymentOptions", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("LifetimeWithdrawalPayments")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.DistributionOption", "DistributionOption", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("Annuitization")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LeaveToBeneficiary")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LifetimeWithdrawalPayments")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Loans")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PartialSurrenders")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PenaltyFreeWithdrawals")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RMDs")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SingleLumpSum")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystematicInterestWithdrawals")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.ExchangeOrReplacement", "ExchangeorReplacement", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("AnnuityType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnnuityType2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnnuityType3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityDate1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityDate2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityDate3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityTimeFrame1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityTimeFrame2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityTimeFrame3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AnotherAnnuityorLifeExchange")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CompanyEnhancementsDetails")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ExchangeAmount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ExchangeAmount2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ExchangeAmount3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Exchange_AnnuityOrLifeContract")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FullExchange")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("IncomeRider")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("IncomeRiderDetails")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LivingBenefitRider")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LivingBenefitRiderBPS")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LivingBenefitRiderBaseValue")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LivingBenefitRiderPayoutAmount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MVA")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MVA2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MVA3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MinGuaranteedIntRate")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MinGuaranteedIntRate2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MinGuaranteedIntRate3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PartialExchange")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PenaltyFree")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PolicyNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PolicyNumber2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PolicyNumber3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PurchaseDate")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PurchaseDate2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PurchaseDate3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacmentCompanyName1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacmentCompanyName2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacmentCompanyName3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacmentProductName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacmentProductName2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacmentProductName3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SameAgentRecommend")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SurrenderChargeAmount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SurrenderChargeAmount2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SurrenderChargeAmount3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SurrenderChargePeriod")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SurrenderChargePeriod2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SurrenderChargePeriod3")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TaxConsequences")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TaxConsequencesDetail")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.FinancialExperience", "FinancialExperience", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("ExistingAssetsAmount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RiskTolerance")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.ProductsOwn", "ProductsOwn", b2 =>
                                {
                                    b2.Property<int>("FinancialExperienceOLifEExtensionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("CertificatesofDeposit")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("FixedorFIA")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("FixedorFIAAmount")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("LifeInsuranceAmount")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MoneyMarket_BrokerageAccount")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("None")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Other")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("OtherDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PortionOfAnnuitiesWithOutPenalty")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("RealEstate")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ReverseMortgage")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Stocks_Bonds_MutualFunds")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("VariableAnnuity")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("VariableAnnuityAmount")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("FinancialExperienceOLifEExtensionId");

                                    b2.ToTable("OLifEExtension");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialExperienceOLifEExtensionId");
                                });

                            b1.Navigation("ProductsOwn")
                                .IsRequired();
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.FinancialInfo", "FinancialInfo", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("AnnualExpenses")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.LiquidityNeeds", "LiquidityNeeds", b2 =>
                                {
                                    b2.Property<int>("FinancialInfoOLifEExtensionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("ExpectedChanges")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ExpectedChangesDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("LiquidNetWorth")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Sufficient")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("FinancialInfoOLifEExtensionId");

                                    b2.ToTable("OLifEExtension");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialInfoOLifEExtensionId");
                                });

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.SourceOfIncome", "SourceOfIncome", b2 =>
                                {
                                    b2.Property<int>("FinancialInfoOLifEExtensionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Investments")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Other")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("OtherDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Pension")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("SocialSecurity")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Wages")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("FinancialInfoOLifEExtensionId");

                                    b2.ToTable("OLifEExtension");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialInfoOLifEExtensionId");
                                });

                            b1.Navigation("LiquidityNeeds")
                                .IsRequired();

                            b1.Navigation("SourceOfIncome")
                                .IsRequired();
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.FinancialObjective", "FinancialObjective", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("EstatePlanning")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("GeneralSavings")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("GrowthForFuture")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ImmediateIncome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LifetimeIncome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Other")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("OtherDetails")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Qualification")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RetirementIncome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SafetyOfPrincipal")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SaveForEmergencies")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TaxDeferral")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.FinancialTimeHorizon", "FinancialTimeHorizon", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstDistribution10to12Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstDistribution13to15Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstDistribution16PlusYears")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstDistribution1to3Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstDistribution4to6Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstDistribution7to9Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstDistributionLessThan1Year")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Inforce10to12Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Inforce13to15Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Inforce16PlusYears")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Inforce1to3Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Inforce4to6Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Inforce7to9Years")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.LiquidAssets", "LiquidAssets", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("Annuities")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CDs")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CheckingSavings")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LifeInsCashSurr")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MoneyMarket")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MutualFunds")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Other")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Pension401k")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StocksBonds")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Total")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.NonLiquidAssets", "NonLiquidAssets", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("Annuities")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LimitedPartnership")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Other")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Pension401k")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RealEstate")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Total")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.SourceOfFunds", "SourceOfFunds", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("CD")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CheckingAccount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DeathBenefit")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DeathBenefitInfo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FixedIndexedAnnuity")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LifeInsurance")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MoneyMarket")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MutualFunds")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Other")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("OtherInfo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReverseMortgage")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("VariableAnnuity")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.Suitability", "Suitability", b1 =>
                        {
                            b1.Property<int>("OLifEExtensionId")
                                .HasColumnType("int");

                            b1.Property<string>("OwnAnnuities")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("OwnLifeInsurance")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PassAssetsBeneficiary")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProposedAnnuityPayPenalty")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProposedAnnuityReplaceProduct")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProvideInfoBased")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProvideInfoLimited")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProvideInfoNotBased")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProvideInfoRefuse")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SOPGrowth")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SOPIncome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OLifEExtensionId");

                            b1.ToTable("OLifEExtension");

                            b1.WithOwner()
                                .HasForeignKey("OLifEExtensionId");

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.Suitability+SuitabilityAdditional", "Additional", b2 =>
                                {
                                    b2.Property<int>("SuitabilityOLifEExtensionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("AcceptNonGuaranteeElements")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("AgentSoldPolicies")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("AgentSoldPoliciesNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("AgentSoldPoliciesNumberInforce")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("AnnuityPurchaseOtherInfoDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ConsultedHealthCareAdvisor")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ConsultedHealthCareAdvisorDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("InterestCreditsFluctuate")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ResideNursingHomeFacility")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ResideNursingHomeFacilityDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("SameAddressAgent")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("SameAddressAgentDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("SameAddressApplicant")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("SameAddressApplicantDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("SurrenderPolicyEarly")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("SuitabilityOLifEExtensionId");

                                    b2.ToTable("OLifEExtension");

                                    b2.WithOwner()
                                        .HasForeignKey("SuitabilityOLifEExtensionId");
                                });

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.Suitability+SuitabilityAgent", "Agent", b2 =>
                                {
                                    b2.Property<int>("SuitabilityOLifEExtensionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("AgentRecommendSuitableAnnuityDetails")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("SuitabilityOLifEExtensionId");

                                    b2.ToTable("OLifEExtension");

                                    b2.WithOwner()
                                        .HasForeignKey("SuitabilityOLifEExtensionId");
                                });

                            b1.Navigation("Additional")
                                .IsRequired();

                            b1.Navigation("Agent")
                                .IsRequired();
                        });

                    b.Navigation("DeathBenefitPaymentOptions")
                        .IsRequired();

                    b.Navigation("DistributionOption")
                        .IsRequired();

                    b.Navigation("ExchangeorReplacement")
                        .IsRequired();

                    b.Navigation("FinancialExperience")
                        .IsRequired();

                    b.Navigation("FinancialInfo")
                        .IsRequired();

                    b.Navigation("FinancialObjective")
                        .IsRequired();

                    b.Navigation("FinancialTimeHorizon")
                        .IsRequired();

                    b.Navigation("LiquidAssets")
                        .IsRequired();

                    b.Navigation("NonLiquidAssets")
                        .IsRequired();

                    b.Navigation("SourceOfFunds")
                        .IsRequired();

                    b.Navigation("Suitability")
                        .IsRequired();
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Payment", b =>
                {
                    b.HasOne("NewApps.Domain.Entities.ACORD.FinancialActivity", null)
                        .WithMany("Payments")
                        .HasForeignKey("FinancialActivityId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.PaymentFormTC", "PaymentForm")
                        .WithMany()
                        .HasForeignKey("PaymentFormId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.SourceOfFundsTC", "SourceOfFundsTC")
                        .WithMany()
                        .HasForeignKey("SourceOfFundsTCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentForm");

                    b.Navigation("SourceOfFundsTC");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Policy", b =>
                {
                    b.HasOne("NewApps.Domain.Entities.ACORD.JurisdictionTC", "Jurisdiction")
                        .WithMany()
                        .HasForeignKey("JurisdictionId");

                    b.HasOne("NewApps.Domain.Entities.ACORD.LineOfBusinessTC", "LineOfBusiness")
                        .WithMany()
                        .HasForeignKey("LineOfBusinessId");

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.Annuity", "Annuity", b1 =>
                        {
                            b1.Property<int>("PolicyId")
                                .HasColumnType("int");

                            b1.Property<int?>("QualPlanSubTypeId")
                                .HasColumnType("int");

                            b1.Property<int?>("QualPlanTypeId")
                                .HasColumnType("int");

                            b1.HasKey("PolicyId");

                            b1.HasIndex("QualPlanSubTypeId");

                            b1.HasIndex("QualPlanTypeId");

                            b1.ToTable("Policy");

                            b1.WithOwner()
                                .HasForeignKey("PolicyId");

                            b1.HasOne("NewApps.Domain.Entities.ACORD.QualPlanSubTypeTC", "QualPlanSubType")
                                .WithMany()
                                .HasForeignKey("QualPlanSubTypeId");

                            b1.HasOne("NewApps.Domain.Entities.ACORD.QualPlanTypeTC", "QualPlanType")
                                .WithMany()
                                .HasForeignKey("QualPlanTypeId");

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.Rider", "Rider", b2 =>
                                {
                                    b2.Property<int>("AnnuityPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<string>("RiderCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AnnuityPolicyId");

                                    b2.ToTable("Policy");

                                    b2.WithOwner()
                                        .HasForeignKey("AnnuityPolicyId");
                                });

                            b1.Navigation("QualPlanSubType");

                            b1.Navigation("QualPlanType");

                            b1.Navigation("Rider")
                                .IsRequired();
                        });

                    b.OwnsOne("NewApps.Domain.Entities.ACORD.ApplicationInfo", "ApplicationInfo", b1 =>
                        {
                            b1.Property<int>("PolicyId")
                                .HasColumnType("int");

                            b1.Property<string>("TrackingID")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PolicyId");

                            b1.ToTable("Policy");

                            b1.WithOwner()
                                .HasForeignKey("PolicyId");

                            b1.OwnsMany("NewApps.Domain.Entities.ACORD.SignatureInfo", "SignatureInfos", b2 =>
                                {
                                    b2.Property<int>("ApplicationInfoPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("SignatureDate")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("SignatureOKId")
                                        .HasColumnType("int");

                                    b2.Property<string>("SignaturePartyID")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ApplicationInfoPolicyId", "Id");

                                    b2.HasIndex("SignatureOKId");

                                    b2.ToTable("SignatureInfo");

                                    b2.WithOwner()
                                        .HasForeignKey("ApplicationInfoPolicyId");

                                    b2.HasOne("NewApps.Domain.Entities.ACORD.WithTC", "SignatureOK")
                                        .WithMany()
                                        .HasForeignKey("SignatureOKId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b2.Navigation("SignatureOK");
                                });

                            b1.Navigation("SignatureInfos");
                        });

                    b.OwnsMany("NewApps.Domain.Entities.ACORD.SERVICE_PROGRAM", "SERVICE_PROGRAMS", b1 =>
                        {
                            b1.Property<int>("PolicyId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.HasKey("PolicyId", "Id");

                            b1.ToTable("SERVICE_PROGRAM");

                            b1.WithOwner()
                                .HasForeignKey("PolicyId");

                            b1.OwnsMany("NewApps.Domain.Entities.ACORD.OptionLink", "OptionLinks", b2 =>
                                {
                                    b2.Property<int>("SERVICE_PROGRAMPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SERVICE_PROGRAMId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId", "Id");

                                    b2.ToTable("OptionLink");

                                    b2.WithOwner()
                                        .HasForeignKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId");

                                    b2.OwnsMany("NewApps.Domain.Entities.ACORD.SERVICE_PROGRAM_Id", "IDs", b3 =>
                                        {
                                            b3.Property<int>("OptionLinkSERVICE_PROGRAMPolicyId")
                                                .HasColumnType("int");

                                            b3.Property<int>("OptionLinkSERVICE_PROGRAMId")
                                                .HasColumnType("int");

                                            b3.Property<int>("OptionLinkId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("PARTY_ID")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("PARTY_NAME")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("OptionLinkSERVICE_PROGRAMPolicyId", "OptionLinkSERVICE_PROGRAMId", "OptionLinkId", "Id");

                                            b3.ToTable("OptionLink_IDs");

                                            b3.WithOwner()
                                                .HasForeignKey("OptionLinkSERVICE_PROGRAMPolicyId", "OptionLinkSERVICE_PROGRAMId", "OptionLinkId");
                                        });

                                    b2.Navigation("IDs");
                                });

                            b1.OwnsMany("NewApps.Domain.Entities.ACORD.Extension", "Extensions", b2 =>
                                {
                                    b2.Property<int>("SERVICE_PROGRAMPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SERVICE_PROGRAMId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.HasKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId", "Id");

                                    b2.ToTable("SERVICE_PROGRAM_Extensions");

                                    b2.WithOwner()
                                        .HasForeignKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId");

                                    b2.OwnsMany("NewApps.Domain.Entities.ACORD.SERVICE_PROGRAM_Id", "IDs", b3 =>
                                        {
                                            b3.Property<int>("ExtensionSERVICE_PROGRAMPolicyId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionSERVICE_PROGRAMId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("PARTY_ID")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("PARTY_NAME")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ExtensionSERVICE_PROGRAMPolicyId", "ExtensionSERVICE_PROGRAMId", "ExtensionId", "Id");

                                            b3.ToTable("SERVICE_PROGRAM_Extensions_IDs");

                                            b3.WithOwner()
                                                .HasForeignKey("ExtensionSERVICE_PROGRAMPolicyId", "ExtensionSERVICE_PROGRAMId", "ExtensionId");
                                        });

                                    b2.OwnsMany("NewApps.Domain.Entities.ACORD.Parameter", "Parameters", b3 =>
                                        {
                                            b3.Property<int>("ExtensionSERVICE_PROGRAMPolicyId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionSERVICE_PROGRAMId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ExtensionSERVICE_PROGRAMPolicyId", "ExtensionSERVICE_PROGRAMId", "ExtensionId", "Id");

                                            b3.ToTable("SERVICE_PROGRAM_Extensions_Parameters");

                                            b3.WithOwner()
                                                .HasForeignKey("ExtensionSERVICE_PROGRAMPolicyId", "ExtensionSERVICE_PROGRAMId", "ExtensionId");
                                        });

                                    b2.Navigation("IDs");

                                    b2.Navigation("Parameters");
                                });

                            b1.OwnsMany("NewApps.Domain.Entities.ACORD.SERVICE_PROGRAM_Id", "IDs", b2 =>
                                {
                                    b2.Property<int>("SERVICE_PROGRAMPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SERVICE_PROGRAMId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("PARTY_ID")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PARTY_NAME")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId", "Id");

                                    b2.ToTable("SERVICE_PROGRAM_IDs");

                                    b2.WithOwner()
                                        .HasForeignKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId");
                                });

                            b1.OwnsOne("NewApps.Domain.Entities.ACORD.Schedule", "Schedule", b2 =>
                                {
                                    b2.Property<int>("SERVICE_PROGRAMPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SERVICE_PROGRAMId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Frequency")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime?>("StartDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId");

                                    b2.ToTable("SERVICE_PROGRAM");

                                    b2.WithOwner()
                                        .HasForeignKey("SERVICE_PROGRAMPolicyId", "SERVICE_PROGRAMId");
                                });

                            b1.Navigation("Extensions");

                            b1.Navigation("IDs");

                            b1.Navigation("OptionLinks");

                            b1.Navigation("Schedule")
                                .IsRequired();
                        });

                    b.OwnsMany("NewApps.Domain.Entities.ACORD.WorkflowStep", "WorkflowSteps", b1 =>
                        {
                            b1.Property<int>("PolicyId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("ACTION_TAKEN")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("AS_OF_DATETIME")
                                .HasColumnType("datetime2");

                            b1.Property<string>("STATUS")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PolicyId", "Id");

                            b1.ToTable("WorkflowStep");

                            b1.WithOwner()
                                .HasForeignKey("PolicyId");

                            b1.OwnsMany("NewApps.Domain.Entities.ACORD.Extension", "Extensions", b2 =>
                                {
                                    b2.Property<int>("WorkflowStepPolicyId")
                                        .HasColumnType("int");

                                    b2.Property<int>("WorkflowStepId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.HasKey("WorkflowStepPolicyId", "WorkflowStepId", "Id");

                                    b2.ToTable("WorkflowStep_Extensions");

                                    b2.WithOwner()
                                        .HasForeignKey("WorkflowStepPolicyId", "WorkflowStepId");

                                    b2.OwnsMany("NewApps.Domain.Entities.ACORD.SERVICE_PROGRAM_Id", "IDs", b3 =>
                                        {
                                            b3.Property<int>("ExtensionWorkflowStepPolicyId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionWorkflowStepId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("PARTY_ID")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("PARTY_NAME")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ExtensionWorkflowStepPolicyId", "ExtensionWorkflowStepId", "ExtensionId", "Id");

                                            b3.ToTable("WorkflowStep_Extensions_IDs");

                                            b3.WithOwner()
                                                .HasForeignKey("ExtensionWorkflowStepPolicyId", "ExtensionWorkflowStepId", "ExtensionId");
                                        });

                                    b2.OwnsMany("NewApps.Domain.Entities.ACORD.Parameter", "Parameters", b3 =>
                                        {
                                            b3.Property<int>("ExtensionWorkflowStepPolicyId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionWorkflowStepId")
                                                .HasColumnType("int");

                                            b3.Property<int>("ExtensionId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ExtensionWorkflowStepPolicyId", "ExtensionWorkflowStepId", "ExtensionId", "Id");

                                            b3.ToTable("WorkflowStep_Extensions_Parameters");

                                            b3.WithOwner()
                                                .HasForeignKey("ExtensionWorkflowStepPolicyId", "ExtensionWorkflowStepId", "ExtensionId");
                                        });

                                    b2.Navigation("IDs");

                                    b2.Navigation("Parameters");
                                });

                            b1.Navigation("Extensions");
                        });

                    b.Navigation("Annuity")
                        .IsRequired();

                    b.Navigation("ApplicationInfo")
                        .IsRequired();

                    b.Navigation("Jurisdiction");

                    b.Navigation("LineOfBusiness");

                    b.Navigation("SERVICE_PROGRAMS");

                    b.Navigation("WorkflowSteps");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.FinancialActivity", b =>
                {
                    b.Navigation("OLifEExtensions");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Payment", b =>
                {
                    b.Navigation("OLifEExtensions");
                });

            modelBuilder.Entity("NewApps.Domain.Entities.ACORD.Policy", b =>
                {
                    b.Navigation("FinancialActivities");

                    b.Navigation("OLifEExtensions");
                });
#pragma warning restore 612, 618
        }
    }
}
